% post(Slug, Title, Introduction, Content, Date, Tags, Author)

% External Links
% SELECT wagtailcore_page.title, wagtailcore_page.slug, owner_id, last_published_at, username, intro, content_location, (SELECT string_agg(slug, ',') FROM taggit_tag INNER JOIN blog_externalblogposttag ON page_ptr_id = content_object_id WHERE taggit_tag.id = tag_id) AS tags FROM blog_externalblogpost INNER JOIN wagtailcore_page ON page_ptr_id = wagtailcore_page.id INNER JOIN auth_user ON owner_id = auth_user.id;
% Posts
% SELECT wagtailcore_page.title, wagtailcore_page.slug, owner_id, last_published_at, username, intro, body, (SELECT string_agg(slug, ',') FROM taggit_tag INNER JOIN blog_blogposttag ON page_ptr_id = content_object_id WHERE taggit_tag.id = tag_id) AS tags FROM blog_blogpost INNER JOIN wagtailcore_page ON page_ptr_id = wagtailcore_page.id INNER JOIN auth_user ON owner_id = auth_user.id;

post("space-age-prolog", "Space Age Prolog", html("intro-space-age-prolog.html"), html("space-age-prolog.html"), "2019-05-17 21:17:58.244066+00", [swish,caching], pbmagi).
post("prolog-language-server", "A Prolog Language Server", html("intro-prolog-language-server.html"), html("prolog-language-server.html"), "2019-09-10 15:35:55.980265+00", [development,editor,lsp], jamesnvc).
post("list-with-all-different-variables", "A List of All Different Variables", html("intro-list-with-all-different-variables.html"), html("list-with-all-different-variables.html"), "2019-06-10 09:00:05.919802+00", [puzzle,constraints,dif2], jamesnvc).
post("writing-blog-using-swi-prolog", "Writing a blog using SWI Prolog", html("intro-writing-blog-using-swi-prolog.html"), html("writing-blog-using-swi-prolog.html"), "2019-05-25 21:22:39.750605+00", [database,html,sessions], joeblog).
post("extended-dcgs", "Extended DCGs", html("intro-extended-dcgs.html"), html("extended-dcgs.html"), "2019-05-18 12:28:01.679534+00", [edcg,dcg], jamesnvc).
post("graph-traversal-problem-solving", "Graph Traversal for Problem Solving", html("intro-graph-traversal-problem-solving.html"), html("graph-traversal-problem-solving.html"), "2019-06-26 19:06:59.517352+00", [maplist,exclude,select,include], joeblog).
post("bit-twiddling-prolog", "Bit-Twiddling in Prolog", html("intro-bit-twiddling-prolog.html"), html("bit-twiddling-prolog.html"), "2019-05-27 13:42:29.494782+00", [cryptography], jamesnvc).
post("sha-1-hash-pure-prolog", "SHA-1 Hash in Pure Prolog", html("intro-sha-1-hash-pure-prolog.html"), html("sha-1-hash-pure-prolog.html"), "2019-05-29 22:39:47.350748+00", [cryptography,sha1,hash], jamesnvc).
post("writing-http2-client-prolog", "Writing an HTTP/2 Client in Prolog", html("intro-writing-http2-client-prolog.html"), html("writing-http2-client-prolog.html"), "2019-06-03 09:00:06.479554+00", [http2,'push-notifications',apns], jamesnvc).
post("dcgs-provide-threading-state-abstraction-dont-break-it", "DCGs provide a threading state abstraction: don't break it", html("intro-dcgs-provide-threading-state-abstraction-dont-break-it.html"), html("dcgs-provide-threading-state-abstraction-dont-break-it.html"), "2019-06-24 09:13:24.664955+00", [dcg,'best-practices_1'], pmoura).
post("various-ways-iterate-prolog", "Various ways to iterate in Prolog", html("intro-various-ways-iterate-prolog.html"), html("various-ways-iterate-prolog.html"), "2019-07-10 10:44:38.319781+00", [findall,maplist,setof,bagof], joeblog).
post("multifile-predicates-dos-and-donts", "Multifile predicates: dos and don'ts", html("intro-multifile-predicates-dos-and-donts.html"), html("multifile-predicates-dos-and-donts.html"), "2019-06-25 13:34:29.307543+00", ['best-practices_1',multifile], pmoura).
post("very-specific-prolog-warning", "A Very Specific Prolog Warning", html("intro-very-specific-prolog-warning.html"), html("very-specific-prolog-warning.html"), "2019-07-08 18:20:56.022805+00", [ffi,io], jamesnvc).
post("game-tree-tutorial", "Game tree tutorial", html("intro-game-tree-tutorial.html"), html("game-tree-tutorial.html"), "2019-07-31 11:44:43.501616+00", [alphabeta,minimax,'game-tree'], joeblog).
post("how-write-compiler-or-interpreter-prolog", "How to write a compiler or interpreter in Prolog", html("intro-how-write-compiler-or-interpreter-prolog.html"), html("how-write-compiler-or-interpreter-prolog.html"), "2019-07-26 14:20:47.304977+00", [compiler,lexing,dcg_1], joeblog).
post("using-planning", "Using A* for Planning", html("intro-using-planning.html"), html("using-planning.html"), "2019-07-31 11:41:26.65293+00", [planning,a], pbmagi).
post("failure-driven-loops-when-and-how", "Failure-driven loops: when and how", html("intro-failure-driven-loops-when-and-how.html"), html("failure-driven-loops-when-and-how.html"), "2019-08-02 11:42:47.55459+00", ['best-practices_1'], pmoura).
post("introduction-clpfd-resource-management", "Introduction to CLP(FD) for Resource Management", html("intro-introduction-clpfd-resource-management.html"), html("introduction-clpfd-resource-management.html"), "2019-08-07 10:49:12.468011+00", [swish,clp,clpfd], pbmagi).
post("prolog-fundamentals-catchup", "Prolog Fundamentals Catchup", html("intro-prolog-fundamentals-catchup.html"), html("prolog-fundamentals-catchup.html"), "2019-09-17 20:26:44.011597+00", [nan], jamesnvc).
post("easily-quickcheck-your-predicates", "Easily QuickCheck your predicates", html("intro-easily-quickcheck-your-predicates.html"), html("easily-quickcheck-your-predicates.html"), "2019-10-02 11:09:49.907277+00", ['best-practices_1',quickcheck,logtalk], pmoura).
post("using-prolog-unravel-foundations-oncology-dose-escalation-trial-designs", "Using Prolog to unravel the foundations of oncology dose-escalation trial designs", html("intro-using-prolog-unravel-foundations-oncology-dose-escalation-trial-designs.html"), html("using-prolog-unravel-foundations-oncology-dose-escalation-trial-designs.html"), "2022-01-30 17:27:56.461278+00", [dcg_1,oncology], aarroyoc).
post("predicate-semantics", "Predicate semantics", html("intro-predicate-semantics.html"), html("predicate-semantics.html"), "2021-12-18 09:15:23.302351+00", [logtalk,semantics], pmoura).
post("modules-are-objects", "Modules are objects", html("intro-modules-are-objects.html"), html("modules-are-objects.html"), "2021-12-18 09:15:39.617314+00", [logtalk,modules], pmoura).
post("parallel-logic-programming-sequel", "Parallel Logic Programming: A Sequel", html("intro-parallel-logic-programming-sequel.html"), html("parallel-logic-programming-sequel.html"), "2022-01-30 17:29:30.805413+00", [concurrency,parallelism], aarroyoc).
post("50-years-prolog-and-beyond", "50 years of Prolog and beyond", html("intro-50-years-prolog-and-beyond.html"), html("50-years-prolog-and-beyond.html"), "2022-01-30 16:59:33.79807+00", [history,future,prolog], aarroyoc).
post("libraryffi-now-available-scryer-prolog", "library(ffi) now available on Scryer Prolog", html("intro-libraryffi-now-available-scryer-prolog.html"), html("libraryffi-now-available-scryer-prolog.html"), "2023-03-12 14:17:22.523866+00", [scryer,ffi_1], aarroyoc).
post("scryer-prolog-meetup-2023-notes", "Scryer Prolog Meetup 2023 Notes", html("intro-scryer-prolog-meetup-2023-notes.html"), html("scryer-prolog-meetup-2023-notes.html"), "2023-11-14 17:57:56.753021+00", [scryer,meetup], aarroyoc).

post("awkward-id-generation-dcg", "Awkward ID generation with a DCG", html("intro-awkward-id-generation-dcg.html"), html("awkward-id-generation-dcg.html"), "2019-06-06 12:31:57.850039+00", [dcg], pbmagi).
post("setting-unit-testing-swi-prolog", "Setting Up Unit Testing In SWI-Prolog", html("intro-setting-unit-testing-swi-prolog.html"), html("setting-unit-testing-swi-prolog.html"), "2019-05-22 14:36:06.219751+00", ['unit-testing',plunit], pbmagi).
post("reflexive-symmetric-and-transitive-relations-prolog", "Reflexive, Symmetric and Transitive Relations in Prolog", html("intro-reflexive-symmetric-and-transitive-relations-prolog.html"), html("reflexive-symmetric-and-transitive-relations-prolog.html"), "2019-05-29 22:39:47.466711+00", [frames,relations,reflexive,roles,triples,transitive,symmetric], pbmagi).
post("prolog-forwards-and-backwards", "Prolog: Forwards and Backwards", html("intro-prolog-forwards-and-backwards.html"), html("prolog-forwards-and-backwards.html"), "2019-05-15 16:41:08.411323+00", [append3,idioms], pbmagi).
post("circumventing-negation-failure-issue-ontology", "Circumventing Negation as Failure Issue with Ontology", html("intro-circumventing-negation-failure-issue-ontology.html"), html("circumventing-negation-failure-issue-ontology.html"), "2019-05-15 16:41:08.411323+00", [ontology,negation,'negation-ontology'], pbmagi).
post("operators-controlled-natural-language", "Operators for a Controlled Natural Language", html("intro-operators-controlled-natural-language.html"), html("operators-controlled-natural-language.html"), "2019-06-26 09:00:03.758938+00", [cnl,operators], pbmagi).
post("consuming-json-api", "Consuming JSON from an API", html("intro-consuming-json-api.html"), html("consuming-json-api.html"), "2019-06-19 11:38:11.753688+00", [setup_call_cleanup3,json,dict,http_open3], pbmagi).
post("code-layout-lists-dicts-and-module-predicates", "Code Layout for Lists, Dicts and Module Predicates", html("intro-code-layout-lists-dicts-and-module-predicates.html"), html("code-layout-lists-dicts-and-module-predicates.html"), "2019-06-12 13:28:50.790509+00", [readability,opinion,layout], pbmagi).
post("is_of-and-has_-predicate-naming", "is_Of and has_: Predicate Naming", html("intro-is_of-and-has_-predicate-naming.html"), html("is_of-and-has_-predicate-naming.html"), "2019-07-10 10:42:56.654474+00", [relations,readability,opinion], pbmagi).
post("framing-frames", "Framing Frames", html("intro-framing-frames.html"), html("framing-frames.html"), "2019-07-03 09:00:02.388031+00", [frames], pbmagi).
post("opening-prolog-world-three-valued-logic", "Opening the World with Three-Valued Logic.", html("intro-opening-prolog-world-three-valued-logic.html"), html("opening-prolog-world-three-valued-logic.html"), "2019-07-24 09:00:03.143994+00", ['open-world','trinary-logic','expert-systems'], pbmagi).
post("tips-planning-documenting-and-testing-swi-prolog-project", "Tips on planning, documenting, and testing a SWI-Prolog project", html("intro-tips-planning-documenting-and-testing-swi-prolog-project.html"), html("tips-planning-documenting-and-testing-swi-prolog-project.html"), "2019-09-16 17:40:31.473912+00", [plunit,pldoc], joeblog).
post("hello-name-second-program-improved", "Hello, <name>!, the second program improved.", html("intro-hello-name-second-program-improved.html"), html("hello-name-second-program-improved.html"), "2019-08-28 14:35:44.801166+00", [io], pbmagi).
post("homoiconic-prolog-explain-yourself", "Homoiconic Prolog: Explain yourself!", html("intro-homoiconic-prolog-explain-yourself.html"), html("homoiconic-prolog-explain-yourself.html"), "2019-10-02 10:00:03.384619+00", [dcg,'expert-systems',reification], pbmagi).
post("transitive-relations-deeper-dive", "Transitive relations, a deeper dive.", html("intro-transitive-relations-deeper-dive.html"), html("transitive-relations-deeper-dive.html"), "2019-09-04 15:58:32.576368+00", [transitive], pbmagi).
post("hello-tau-prolog", "Hello, Tau Prolog!", html("intro-hello-tau-prolog.html"), html("hello-tau-prolog.html"), "2019-08-14 14:56:40.021052+00", ['tau-prolog',javascript], pbmagi).
post("difference-lists-explored", "Difference Lists Explored", html("intro-difference-lists-explored.html"), html("difference-lists-explored.html"), "2019-09-25 10:00:03.461611+00", ['difference-lists'], pbmagi).
post("reification-example", "Reification By Example", html("intro-reification-example.html"), html("reification-example.html"), "2019-08-21 12:03:49.996603+00", [reification], pbmagi).
post("functional-prolog-map-filter-and-reduce", "Functional Prolog: Map, Filter and Reduce", html("intro-functional-prolog-map-filter-and-reduce.html"), html("functional-prolog-map-filter-and-reduce.html"), "2019-09-18 10:00:03.6505+00", [maplist,exclude,include,foldl,call,functional], pbmagi).
post("using-postgresql-prolog", "Using PostgreSQL from Prolog", html("intro-using-postgresql-prolog.html"), html("using-postgresql-prolog.html"), "2022-04-03 11:32:59.542265+00", [postgresql,scryer], aarroyoc).
